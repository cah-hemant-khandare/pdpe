UPDATE
  `datamarket-np-cah.SMNTC_PRICING_ANALYTICS_FACT.FACT_ITEM_PRICE_LIST` a
SET
  CALC_PREV_CATALOG_PRICE =
  CASE
    WHEN ( b.CALC_CURRENT_CATALOG_PRICE <> b.CALC_PREV_CATALOG_PRICE1 ) THEN b.CALC_PREV_CATALOG_PRICE1
  ELSE
  b.CALC_PREV_CATALOG_PRICE2
END
  ,
  CALC_PREV_CATALOG_PRICE_CHANGE_TMSTP =
  CASE
    WHEN ( b.CALC_CURRENT_CATALOG_PRICE <> b.CALC_PREV_CATALOG_PRICE1 ) THEN b.CALC_CURRENT_CATALOG_PRICE_CHANGE_TMSTP1
  ELSE
  b.CALC_PREV_CATALOG_PRICE_CHANGE_TMSTP1
END
  ,
  CALC_PREV_RTL_PRICE_ZVSR =
  CASE
    WHEN ( b.CALC_CURRENT_RTL_PRICE_ZVSR <> b.CALC_PREV_RTL_PRICE_ZVSR1 ) THEN b.CALC_PREV_RTL_PRICE_ZVSR1
  ELSE
  b.CALC_PREV_RTL_PRICE_ZVSR2
END
  ,
  CALC_PREV_RTL_PRICE_ZVSR_CHANGE_TMSTP =
  CASE
    WHEN ( b.CALC_CURRENT_RTL_PRICE_ZVSR <> b.CALC_PREV_RTL_PRICE_ZVSR1 ) THEN b.CALC_CURRENT_RTL_PRICE_ZVSR_CHANGE_TMSTP
  ELSE
  b.CALC_PREV_RTL_PRICE_ZVSR_CHANGE_TMSTP1
END
  ,
  CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU =
  CASE
    WHEN ( b.CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU <> b.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU1 ) THEN b.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU1
  ELSE
  b.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU2
END
  ,
  CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP = CASE
    WHEN ( b.CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU <> b.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU1 ) THEN b.CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP
  ELSE
  b.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP1
END
  ,
  CALC_PREV_CONTRACT_PRICE_ZVBS =
  CASE
    WHEN ( b.CALC_CURRENT_CONTRACT_PRICE_ZVBS <> b.CALC_PREV_CONTRACT_PRICE_ZVBS1 ) THEN b.CALC_PREV_CONTRACT_PRICE_ZVBS1
  ELSE
  b.CALC_PREV_CONTRACT_PRICE_ZVBS2
END
  ,
  CALC_PREV_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP =
  CASE
    WHEN ( b.CALC_CURRENT_CONTRACT_PRICE_ZVBS <> b.CALC_PREV_CONTRACT_PRICE_ZVBS1 ) THEN b.CALC_CURRENT_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP
  ELSE
  b.CALC_PREV_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP1
END
  ,
  CALC_PREV_AFTR_RBT_PRICE_ZVBR =
  CASE
    WHEN ( b.CALC_CURRENT_AFTR_RBT_PRICE_ZVBR <> b.CALC_PREV_AFTR_RBT_PRICE_ZVBR1 ) THEN b.CALC_PREV_AFTR_RBT_PRICE_ZVBR1
  ELSE
  b.CALC_PREV_AFTR_RBT_PRICE_ZVBR2
END
  ,
  CALC_PREV_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP =
  CASE
    WHEN ( b.CALC_CURRENT_AFTR_RBT_PRICE_ZVBR <> b.CALC_PREV_AFTR_RBT_PRICE_ZVBR1 ) THEN b.CALC_CURRENT_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP
  ELSE
  b.CALC_PREV_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP1
END
  ,
  ROW_UPDATE_TIMESTAMP=current_datetime()
FROM (
  SELECT
    HISTORY.CLIENT_CHPDPE_CEITMPX,
    HISTORY.KUNNR_CHPDPE_CEITMPX,
    HISTORY.VKORG_CHPDPE_CEITMPX,
    HISTORY.VTWEG_CHPDPE_CEITMPX,
    HISTORY.SPART_CHPDPE_CEITMPX,
    HISTORY.MATNR_CHPDPE_CEITMPX,
    HISTORY.CALC_EFFECTIVE_START_DATE,
    HISTORY.CALC_CURRENT_FLAG,
    HISTORY.CALC_CURRENT_CATALOG_PRICE,
    HISTORY.CALC_PREV_CATALOG_PRICE,
    HISTORY.CALC_PREV_CATALOG_PRICE_CHANGE_TMSTP,
    HISTORY.CALC_CURRENT_CATALOG_PRICE_CHANGE_TMSTP,
    HISTORY.CALC_PREV_RTL_PRICE_ZVSR,
    HISTORY.CALC_PREV_RTL_PRICE_ZVSR_CHANGE_TMSTP,
    HISTORY.CALC_CURRENT_RTL_PRICE_ZVSR_CHANGE_TMSTP,
    HISTORY.CALC_CURRENT_RTL_PRICE_ZVSR,
    HISTORY.CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU,
    HISTORY.CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP,
    HISTORY.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU,
    HISTORY.CALC_CURRENT_CONTRACT_PRICE_ZVBS,
    HISTORY.CALC_CURRENT_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP,
    HISTORY.CALC_PREV_CONTRACT_PRICE_ZVBS,
    HISTORY.CALC_PREV_AFTR_RBT_PRICE_ZVBR,
    HISTORY.CALC_PREV_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP,
    HISTORY.CALC_CURRENT_AFTR_RBT_PRICE_ZVBR,
    HISTORY.CALC_CURRENT_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP,
    ( LEAD( HISTORY.CALC_CURRENT_CATALOG_PRICE, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_CATALOG_PRICE1,
    ( LEAD(HISTORY.CALC_PREV_CATALOG_PRICE, 1) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_CATALOG_PRICE2,
    ( LEAD( HISTORY.CALC_PREV_CATALOG_PRICE_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_CATALOG_PRICE_CHANGE_TMSTP1,
    ( LEAD( HISTORY.CALC_CURRENT_CATALOG_PRICE_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_CURRENT_CATALOG_PRICE_CHANGE_TMSTP1,
    ( LEAD( HISTORY.CALC_CURRENT_RTL_PRICE_ZVSR, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_RTL_PRICE_ZVSR1,
    ( LEAD(HISTORY.CALC_PREV_RTL_PRICE_ZVSR, 1) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_RTL_PRICE_ZVSR2,
    ( LEAD( HISTORY.CALC_CURRENT_RTL_PRICE_ZVSR_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_CURRENT_RTL_PRICE_ZVSR_CHANGE_TMSTP1,
    ( LEAD( HISTORY.CALC_PREV_RTL_PRICE_ZVSR_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_RTL_PRICE_ZVSR_CHANGE_TMSTP1,
    LEAD( HISTORY.CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) AS CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU1,
    LEAD( HISTORY.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) AS CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU2,
    ( LEAD( HISTORY.CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_CURRENT_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP1,
    ( LEAD( HISTORY.CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_RTL_SELL_UNT_PRICE_ZVSU_CHANGE_TMSTP1,
    LEAD( HISTORY.CALC_CURRENT_CONTRACT_PRICE_ZVBS, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) AS CALC_PREV_CONTRACT_PRICE_ZVBS1,
    LEAD( HISTORY.CALC_PREV_CONTRACT_PRICE_ZVBS, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) AS CALC_PREV_CONTRACT_PRICE_ZVBS2,
    ( LEAD( HISTORY.CALC_CURRENT_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_CURRENT_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP1,
    ( LEAD( HISTORY.CALC_PREV_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_CONTRACT_PRICE_ZVBS_CHANGE_TMSTP1,
    LEAD( HISTORY.CALC_CURRENT_AFTR_RBT_PRICE_ZVBR, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) AS CALC_PREV_AFTR_RBT_PRICE_ZVBR1,
    LEAD( HISTORY.CALC_PREV_AFTR_RBT_PRICE_ZVBR, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) AS CALC_PREV_AFTR_RBT_PRICE_ZVBR2,
    ( LEAD( HISTORY.CALC_CURRENT_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_CURRENT_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP1,
    ( LEAD( HISTORY.CALC_PREV_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP, 1 ) OVER (PARTITION BY HISTORY.CLIENT_CHPDPE_CEITMPX, HISTORY.KUNNR_CHPDPE_CEITMPX, HISTORY.VKORG_CHPDPE_CEITMPX, HISTORY.VTWEG_CHPDPE_CEITMPX, HISTORY.SPART_CHPDPE_CEITMPX, HISTORY.MATNR_CHPDPE_CEITMPX ORDER BY HISTORY.CALC_EFFECTIVE_START_DATE DESC ) ) AS CALC_PREV_AFTR_RBT_PRICE_ZVBR_CHANGE_TMSTP1
  FROM (
    SELECT
      --HK :Added to pick lattest two records based on effective start date in desc order
      *
    FROM (
      SELECT
        t1.*,
        ROW_NUMBER() OVER (PARTITION BY CLIENT_CHPDPE_CEITMPX, KUNNR_CHPDPE_CEITMPX, VKORG_CHPDPE_CEITMPX, VTWEG_CHPDPE_CEITMPX, SPART_CHPDPE_CEITMPX, MATNR_CHPDPE_CEITMPX ORDER BY CALC_EFFECTIVE_START_DATE DESC ) AS row_num
      FROM
        `datamarket-np-cah.SMNTC_PRICING_ANALYTICS_FACT.FACT_ITEM_PRICE_LIST` t1 ) a
    WHERE
      row_num <= 2 ) AS HISTORY
  INNER JOIN
    `datamarket-np-cah.SI_SOH_SAP.CHPDPE_CEITMPX_P` AS SOURCE1
  ON
    ( HISTORY.CLIENT_CHPDPE_CEITMPX = SOURCE1.CLIENT
      AND HISTORY.KUNNR_CHPDPE_CEITMPX = SOURCE1.KUNNR
      AND HISTORY.VKORG_CHPDPE_CEITMPX = SOURCE1.VKORG
      AND HISTORY.VTWEG_CHPDPE_CEITMPX = SOURCE1.VTWEG
      AND HISTORY.SPART_CHPDPE_CEITMPX = SOURCE1.SPART
      AND HISTORY.MATNR_CHPDPE_CEITMPX = SOURCE1.MATNR )
  WHERE
    source1._PARTITIONTIME >= v_part_date --HK:added for partition
    AND v_attr_ingst_timestamp_src >= v_attr_ingst_timestamp_trgt --DK: added for incremental load
    ) b
WHERE
  ( a.CLIENT_CHPDPE_CEITMPX = b.CLIENT_CHPDPE_CEITMPX
    AND a.KUNNR_CHPDPE_CEITMPX = b.KUNNR_CHPDPE_CEITMPX
    AND a.VKORG_CHPDPE_CEITMPX = b.VKORG_CHPDPE_CEITMPX
    AND a.VTWEG_CHPDPE_CEITMPX = b.VTWEG_CHPDPE_CEITMPX
    AND a.SPART_CHPDPE_CEITMPX = b.SPART_CHPDPE_CEITMPX
    AND a.MATNR_CHPDPE_CEITMPX = b.MATNR_CHPDPE_CEITMPX )
  AND b.CALC_CURRENT_FLAG = 'Y'
  AND a.CALC_CURRENT_FLAG = 'Y';